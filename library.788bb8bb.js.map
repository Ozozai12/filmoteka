{"mappings":"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","sources":["src/js/authorization.js","src/js/genres.js","src/js/card.js","src/js/popular.js","src/js/modal.js","src/js/scroll_button.js"],"sourcesContent":["export { NewServiceApi };\nconst key = 'bef2e1469ade062164db331fc6ab2f25';\nconst url = 'https://api.themoviedb.org/3';\nexport default class NewServiceApi {\n  constructor() {\n    this.searchValue = '';\n    this.page = 1;\n    this.id = NaN;\n  }\n\n  // сервіс  топ популярних фільмів за тиждень\n  async serviceMovieTopApi() {\n    try {\n      const resp = await fetch(\n        `${url}/trending/movie/week?api_key=${key}&media_type=all&time_window=week&page=${this.page}`\n      );\n      const respData = await resp.json();\n\n      return respData;\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  // сервіс пошук фільмів за значенням\n  async serviceSearchMovie() {\n    try {\n      const resp = await fetch(\n        `${url}/search/movie?api_key=${key}&query=\"${this.searchValue}`\n      );\n\n      const respData = await resp.json();\n\n      return respData;\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  // сервіс пошку фыльмыв по айді\n  async serviceIdMovie(id) {\n    try {\n      const resp = await fetch(`${url}/movie/${this.id},?api_key=${key}`);\n\n      const respData = await resp.json();\n\n      return respData;\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n\n  ressetPage() {\n    this.page = 1;\n  }\n\n  incrementPage() {\n    return (this.page += 1);\n  }\n\n  decrementPage() {\n    return (this.page -= 1);\n  }\n\n  set query(nuwQuery) {\n    this.searchValue = nuwQuery;\n  }\n\n  set pageNumber(nuwPage) {\n    this.page = nuwPage;\n  }\n\n  set idNumber(nuwId) {\n    this.id = nuwId;\n  }\n}\n","export const genresInfo = [\n  {\n    id: 28,\n    name: 'Action',\n  },\n  {\n    id: 12,\n    name: 'Adventure',\n  },\n  {\n    id: 16,\n    name: 'Animation',\n  },\n  {\n    id: 35,\n    name: 'Comedy',\n  },\n  {\n    id: 80,\n    name: 'Crime',\n  },\n  {\n    id: 99,\n    name: 'Documentary',\n  },\n  {\n    id: 18,\n    name: 'Drama',\n  },\n  {\n    id: 10751,\n    name: 'Family',\n  },\n  {\n    id: 14,\n    name: 'Fantasy',\n  },\n  {\n    id: 36,\n    name: 'History',\n  },\n  {\n    id: 27,\n    name: 'Horror',\n  },\n  {\n    id: 10402,\n    name: 'Music',\n  },\n  {\n    id: 9648,\n    name: 'Mystery',\n  },\n  {\n    id: 10749,\n    name: 'Romance',\n  },\n  {\n    id: 878,\n    name: 'Science Fiction',\n  },\n  {\n    id: 10770,\n    name: 'TV Movie',\n  },\n  {\n    id: 53,\n    name: 'Thriller',\n  },\n  {\n    id: 10752,\n    name: 'War',\n  },\n  {\n    id: 37,\n    name: 'Western',\n  },\n];\n","// рендерить розмітку однієї картки\n\nimport { genresInfo } from './genres';\n\nexport { cardMarkup };\n\nfunction cardMarkup(data) {\n  data.forEach(el => {\n    //порівняння айді з масивом всіх жанрів\n    genresInfo.map(genre => {\n      if (genre.id === el.genre_ids[0]) {\n        el.genre_ids[0] = genre.name;\n      }\n      if (genre.id === el.genre_ids[1]) {\n        el.genre_ids[1] = genre.name;\n      }\n      if (genre.id === el.genre_ids[2]) {\n        el.genre_ids[2] = genre.name;\n      }\n      if (genre.id === el.genre_ids[3]) {\n        el.genre_ids[3] = genre.name;\n      }\n      if (genre.id === el.genre_ids[4]) {\n        el.genre_ids[4] = genre.name;\n      }\n    });\n    //список жанрів\n    const genre = el.genre_ids;\n\n    //лишає з дати тільки рік\n    const realeaseData = el.release_date.slice(0, 4);\n  });\n}\n","import { NewServiceApi } from './authorization';\nimport { cardMarkup } from './card';\nconst serviceApi = new NewServiceApi();\n\nconst serviceTopApi = async () => {\n  const data = await serviceApi.serviceMovieTopApi();\n  cardMarkup(data.results);\n};\nserviceTopApi();\n","import ApiService from './authorization';\n\nlet newApiService = new ApiService();\n\n// получаем переменные\n\n// const container = document.querySelector('.film-card');\nconst modalBox = document.querySelector('.box');\nconst btn = document.querySelector('.open-btn');\nlet backdrop;\nlet respData;\nlet genreList = []\n\nmodalBox.innerHTML = ''\n\n// вызов модального окна с карточкой\n\nconst openModal = async () => {\n  console.log('window opened')\n  newApiService.idNumber = 852448;\n\n  // newApiService.serviceMovieTopApi().then(data => console.log(data.results))\n  respData = await newApiService.serviceIdMovie()\n\n  // получаем список жанров\n\n  genres = Object.values(respData.genres);\n\n  for (const genre of genres) {\n    genreList.push(genre.name)\n  }\n\n  modalBox.insertAdjacentHTML('afterBegin', createModal());\n\n  const btnClose = document.querySelector('.button__modal-close');\n  btnClose.addEventListener('click', onModalClose);\n\n  // backdrop = document.querySelector('.backdrop')\n  // window.addEventListener('click', onModalCloseBckdrp)\n\n  // window.addEventListener('keydown', onModalCloseEsc)\n}\n\n// разметка одной карточки модального окна фильма\n\nfunction createModal() {\n    const markup =  `\n    <div class=\"backdrop\">\n      <div class=\"film-card modal\">\n        <img src=\"https://image.tmdb.org/t/p/original${respData.poster_path}\" alt=\"Txt\" />\n        <div>\n          <h2 class=\"film-card__title\">${respData.title}</h2>\n          <div class=\"film-card__features\">\n            <ul class=\"film-card__feature-list\">\n              <li class=\"film-card__feature-name\">Vote / Votes</li>\n              <li class=\"film-card__feature-name\">Popularity</li>\n              <li class=\"film-card__feature-name\">Original Title</li>\n              <li class=\"film-card__feature-name\">Genre</li>\n            </ul>\n            \n            <ul>\n              <li class=\"film-card__feature-description\"><span class=\"vote\">${respData.vote_average}</span> <span\n                                class=\"divider\"> / </span> ${respData.vote_count}</li>\n              <li class=\"film-card__feature-description\">${respData.popularity}</li>\n              <li class=\"film-card__feature-description original-title\">${respData.original_title}</li>\n              <li class=\"film-card__feature-description\">${genreList}</li>\n            </ul>\n          </div>\n          <h3 class=\"about__title\">About</h3>\n          <p class=\"about__text\">\n            ${respData.overview}\n          </p>\n            \n          <div class=\"button__box\">\n            <button type=\"button\" class=\"button__watch button\">Add to watched</button>\n            <button type=\"button\" class=\"button__queue button\">Add to queue</button>\n          </div>\n\n        <button class=\"button__modal-close\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"14\"\n            height=\"14\"\n            class=\"bi bi-x-lg\"\n            viewBox=\"0 0 32 32\"\n          >\n            <path d=\"M32 3.223l-3.223-3.223-12.777 12.777-12.777-12.777-3.223 3.223 12.777 12.777-12.777 12.777 3.223 3.223 12.777-12.777 12.777 12.777 3.223-3.223-12.777-12.777 12.777-12.777z\"></path>\n          </svg>\n        </button>\n      </div>\n    </div>\n  </div>\n  `\n  return markup;\n}\n\nbtn.addEventListener('click', openModal);\n\n// openModal()\n\n// закрытие модалки при клике на кнопку закрытия\n\nfunction onModalClose() {\n  modalBox.innerHTML = ''\n}\n\n// закрытие модалки по нажатию клавиши\n\nfunction onModalCloseEsc(evt) {\n    if (evt.code === 'Escape' &&  modalBox.innerHTML === '') {     \n      return\n    } else if (evt.code === 'Escape') {\n        onModalClose();\n    }\n}\n\n// закрытие модалки по клику на бекдроп\n\nfunction onModalCloseBckdrp(evt) {\n  if (evt.target === backdrop) {\n    onModalClose();\n  } else {\n    return\n  }\n}\n\n\n","const btnToUp = document.querySelector('.to-top');\nbtnToUp.addEventListener('click', () => {\n    window.scrollTo(0, 0);\n});\n\nconst btnScroll = document.querySelector('.to-top');\nwindow.onscroll = () => {\n    //Якщо прокручено більше 700, кнопка з'являється\n    if(window.scrollY > 700){\n    btnScroll.classList.remove('to-top--hide');\n    //Якщо прокручено менше 700, кнопка зникає\n    } else if(window.scrollY < 700){\n    btnScroll.classList.add('to-top--hide');\n    }\n}"],"names":["$926669d2b7398d15$export$bf84b2c7ba08ba70","async","resp","fetch","this","page","json","error","console","message","searchValue","id","ressetPage","incrementPage","decrementPage","query","nuwQuery","pageNumber","nuwPage","idNumber","nuwId","constructor","NaN","$a9bf4680370b89e9$export$d34cdef81f463282","name","$7444c4569451fc47$export$e9dce1737af53b91","data","forEach","el","map","genre","genre_ids","release_date","slice","$ff1fb5e2e4d3490a$var$serviceApi","serviceMovieTopApi","results","$ff1fb5e2e4d3490a$var$serviceTopApi","$8a7e756c566dd1ea$var$newApiService","$8a7e756c566dd1ea$var$modalBox","document","querySelector","$8a7e756c566dd1ea$var$btn","$8a7e756c566dd1ea$var$respData","$8a7e756c566dd1ea$var$genreList","innerHTML","$8a7e756c566dd1ea$var$onModalClose","addEventListener","log","serviceIdMovie","genres","Object","values","push","insertAdjacentHTML","poster_path","title","vote_average","vote_count","popularity","original_title","overview","window","scrollTo","$a04504cb3c721037$var$btnScroll","onscroll","scrollY","classList","remove","add"],"version":3,"file":"library.788bb8bb.js.map"}